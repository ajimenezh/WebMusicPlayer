{
  "name": "audio-metadata",
  "version": "0.1.0",
  "description": "Extract metadata from mp3, wav and ogg",
  "keywords": [
    "id3",
    "metadata",
    "mp3",
    "ogg",
    "wav"
  ],
  "author": {
    "name": "Tommy Montgomery",
    "email": "tmont@tmont.com",
    "url": "http://tmont.com/"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/tmont/audio-metadata.git"
  },
  "files": [
    "index.js",
    "audio-metadata.min.js",
    "src",
    "README.md"
  ],
  "license": "WTFPL",
  "devDependencies": {
    "mocha": "1.16.2",
    "should": "2.1.1",
    "browserify": "3.19.1",
    "uglify-js": "2.4.8",
    "serve": "1.3.0"
  },
  "scripts": {
    "test": "./node_modules/.bin/mocha -R spec tests",
    "start": "./node_modules/.bin/serve -p 24578 .",
    "build": "./node_modules/.bin/browserify -s AudioMetadata -e index.js --bare > audio-metadata.js",
    "minify": "npm run build && ./node_modules/.bin/uglifyjs audio-metadata.js > audio-metadata.min.js && rm audio-metadata.js"
  },
  "readme": "# audio-metadata\n\n[![Build Status](https://travis-ci.org/tmont/audio-metadata.png)](https://travis-ci.org/tmont/audio-metadata)\n[![NPM version](https://badge.fury.io/js/audio-metadata.png)](http://badge.fury.io/js/audio-metadata)\n\nThis is a tiny (1.9K gzipped) library to extract metadata from audio files.\nSpecifically, it can extract [ID3v1](http://en.wikipedia.org/wiki/ID3#ID3v1),\n[ID3v2](http://en.wikipedia.org/wiki/ID3#ID3v2) and\n[Xiph comments](http://www.xiph.org/vorbis/doc/v-comment.html)\n(i.e. metadata in [OGG containers](http://en.wikipedia.org/wiki/Ogg)).\n\nLicensed under the [WTFPL](http://www.wtfpl.net/).\n\n## What is this good for?\nThe purpose of this library is to be very fast and small. It's suitable\nfor server-side or client-side. Really any platform that supports\n`ArrayBuffer` and its ilk (`Uint8Array`, etc.).\n\nI wrote it because the other libraries were large and very robust; I just\nneeded something that could extract the metadata out without requiring\n30KB of JavaScript. `audio-metadata.min.js` comes in at 5.5K/1.9K\nminified/gzipped.\n\nTo accomplish the small size and speed, it sacrifices several things.\n\n1. It's very naive. For example, the OGG format stipulates that the comment\n   header must come second, after the identification header. This library\n   assumes that's always true and completely ignores the identification header.\n2. Text encoding is for losers. ID3v2 in particular has a lot of flexibility in\n   terms of the encoding of text for ID3 frames. This library will handle UTF8\n   properly, but everything else is just spit out as ASCII.\n3. It assumes that ID3v2 tags are always the very first thing in the file (as they\n   should be). The spec is mum on whether that's ''required'', but this library\n   assumes it is.\n4. ID3v1.1 (extended tags with \"TAG+\") are not supported, Wikipedia suggests they\n   aren't really well-supported in media players anyway.\n\nAs such, the code is a bit abstruse, in that you'll see some magic numbers, like\n`offset += 94` where it's ignoring a bunch of header data to get to the good stuff.\nDon't judge me based on this code. It works and it's tested; it's just hard to\nread.\n\n## Usage\nThe library operates solely on `ArrayBuffer`s, or `Buffer`s for Node's convenience.\nSo you'll need to preload your audio data before using this library.\n\nThe library defines three methods:\n\n```javascript\n// extract comments from OGG container\nAudioMetaData.ogg(buffer)\n\n// extract ID3v2 tags\nAudioMetaData.id3v2(buffer);\n\n// extract ID3v1 tags\nAudioMetaData.id3v1(buffer);\n```\n\n### Node\nInstall it using NPM: `npm install audio-metadata`\n\n```javascript\nvar audioMetaData = require('audio-metadata'),\n\tfs = require('fs');\n\nvar oggData = fs.readFileSync('/path/to/my.ogg');\nvar metadata = audioMetaData.ogg(oggData);\n/*\n{\n  \"title\": \"Contra Base Snippet\",\n  \"artist\": \"Konami\",\n  \"album\": \"Bill and Lance's Excellent Adventure\",\n  \"year\": \"1988\",\n  \"tracknumber\": \"1\",\n  \"encoder\": \"Lavf53.21.1\"\n}\n*/\n```\n\n### Browser\nThis library has been tested on current versions of Firefox and Chrome. IE\nmight work, since it apparently supports `ArrayBuffer`. Safari/Opera are\nprobably okayish since they're webkit. Your mileage may vary.\n\nLoading `audio-metadata.min.js` will define the `AudioMetadata` global variable.\n\n```html\n<script type=\"text/javascript\" src=\"audio-metadata.min.js\"></script>\n<script type=\"text/javascript\">\n\tvar req = new XMLHttpRequest();\n\treq.open('GET', 'http://example.com/sofine.mp3', true);\n\treq.responseType = 'arraybuffer';\n\n\treq.onload = function() {\n\t\tvar metadata = AudioMetaData.id3v2(req.response);\n\t\t/*\n\t\t{\n\t\t\t\"title\": \"Contra\",\n\t\t\t\"artist\": \"Bill & Ted\",\n\t\t\t\"album\": \"Konami\",\n\t\t\t\"year\": \"2000\",\n\t\t\t\"track\": \"2\",\n\t\t\t\"encoder\": \"Lavf53.21.1\"\n\t\t}\n\t\t*/\n\t};\n\n\treq.send(null);\n</script>\n```\n\n## Development\n```bash\ngit clone git@github.com:tmont/audio-metadata.js\ncd audio-metadata\nnpm install\nnpm test\n```\n\nThere's a \"test\" (yeah, yeah) for browsers, which you can view\nby running `npm start` and then pointing your browser at\n[http://localhost:24578/tests/browser/](http://localhost:24578/tests/browser/).\n\nTo build the minified browserified file, run `npm run minify`.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/tmont/audio-metadata/issues"
  },
  "_id": "audio-metadata@0.1.0",
  "_from": "audio-metadata@"
}
